{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/product.service\";\nexport class CartService {\n  constructor(productService) {\n    this.productService = productService;\n    this.cart = new Map();\n    //lấy dữ liệu giỏ hàng từ localStorage khi khởi tạo service\n    const storeCart = localStorage.getItem('cart');\n    if (storeCart) {\n      this.cart = new Map(JSON.parse(storeCart));\n    }\n  }\n  addToCart(productId, quantity = 1) {\n    debugger;\n    if (this.cart.has(productId)) {\n      //nếu sản phẩm đã có trong giỏ hàng, tăng số lượng quantity lên\n      this.cart.set(productId, this.cart.get(productId) + quantity);\n    } else {\n      //Nếu sản phẩm chưa có trao giỏ hàng thì thêm sản phẩm vào số luongjw với quantity\n      this.cart.set(productId, quantity);\n    }\n    //Sau khi thay đổi giỏ hàng, lưu trừ nó vào localStorage\n    this.saveCartToLocalStorage();\n  }\n  getCart() {\n    return this.cart;\n  }\n  saveCartToLocalStorage() {\n    debugger;\n    localStorage.setItem('cart', JSON.stringify(Array.from(this.cart.entries())));\n  }\n  //xoá dữ liệu cart và cập nhật Local Storage\n  clearCart() {\n    this.cart.clear(); //xoá toàn bộ dữ liệu trong giỏ hàng\n    this.saveCartToLocalStorage(); // lưu giỏ hàng vào localStorage trống\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.ProductService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["CartService","constructor","productService","cart","Map","storeCart","localStorage","getItem","JSON","parse","addToCart","productId","quantity","has","set","get","saveCartToLocalStorage","getCart","setItem","stringify","Array","from","entries","clearCart","clear","_","i0","ɵɵinject","i1","ProductService","_2","factory","ɵfac","providedIn"],"sources":["/Users/toannguyenduc/Desktop/ShopApp/Java-Spring_Web_Angular_Shop/FrontEnd/src/app/service/cart.service.ts"],"sourcesContent":["import { from } from 'rxjs';\nimport { ProductService } from 'src/app/service/product.service';\nimport { Injectable } from \"@angular/core\";\nimport { LocalStorageService} from 'ng'\n@Injectable({\n    providedIn: \"root\",\n  })\n\nexport class CartService {\n    private cart: Map<number, number> = new Map();\n\n    constructor(private productService : ProductService) {\n        //lấy dữ liệu giỏ hàng từ localStorage khi khởi tạo service\n        const storeCart = localStorage.getItem('cart');\n        if (storeCart) {\n            this.cart = new Map(JSON.parse(storeCart));\n        }\n    }\n    addToCart(productId: number, quantity: number = 1) :void {\n        debugger\n        if (this.cart.has(productId)) {\n            //nếu sản phẩm đã có trong giỏ hàng, tăng số lượng quantity lên\n            this.cart.set(productId, this.cart.get(productId)! + quantity);\n        } else {\n            //Nếu sản phẩm chưa có trao giỏ hàng thì thêm sản phẩm vào số luongjw với quantity\n            this.cart.set(productId, quantity);\n        }\n        //Sau khi thay đổi giỏ hàng, lưu trừ nó vào localStorage\n        this.saveCartToLocalStorage();\n    }\n    getCart(): Map<number,number> {\n        return this.cart;\n    }\n    private saveCartToLocalStorage():void {\n        debugger\n        localStorage.setItem('cart', JSON.stringify(Array.from(this.cart.entries())));\n    }\n    //xoá dữ liệu cart và cập nhật Local Storage\n    clearCart(): void {\n        this.cart.clear(); //xoá toàn bộ dữ liệu trong giỏ hàng\n        this.saveCartToLocalStorage(); // lưu giỏ hàng vào localStorage trống\n    }\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGpBC,YAAoBC,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;IAF1B,KAAAC,IAAI,GAAwB,IAAIC,GAAG,EAAE;IAGzC;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACX,IAAI,CAACF,IAAI,GAAG,IAAIC,GAAG,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;;EAElD;EACAK,SAASA,CAACC,SAAiB,EAAEC,QAAA,GAAmB,CAAC;IAC7C;IACA,IAAI,IAAI,CAACT,IAAI,CAACU,GAAG,CAACF,SAAS,CAAC,EAAE;MAC1B;MACA,IAAI,CAACR,IAAI,CAACW,GAAG,CAACH,SAAS,EAAE,IAAI,CAACR,IAAI,CAACY,GAAG,CAACJ,SAAS,CAAE,GAAGC,QAAQ,CAAC;KACjE,MAAM;MACH;MACA,IAAI,CAACT,IAAI,CAACW,GAAG,CAACH,SAAS,EAAEC,QAAQ,CAAC;;IAEtC;IACA,IAAI,CAACI,sBAAsB,EAAE;EACjC;EACAC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACd,IAAI;EACpB;EACQa,sBAAsBA,CAAA;IAC1B;IACAV,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAClB,IAAI,CAACmB,OAAO,EAAE,CAAC,CAAC,CAAC;EACjF;EACA;EACAC,SAASA,CAAA;IACL,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE,CAAC,CAAC;IACnB,IAAI,CAACR,sBAAsB,EAAE,CAAC,CAAC;EACnC;EAAC,QAAAS,CAAA,G;qBAjCQzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAHR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}