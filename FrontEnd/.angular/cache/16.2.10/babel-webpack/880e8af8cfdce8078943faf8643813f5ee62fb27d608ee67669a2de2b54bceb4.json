{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/user.service\";\nimport * as i3 from \"src/app/service/token.service\";\nimport * as i4 from \"src/app/service/role.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../header/header.component\";\nimport * as i8 from \"../footer/footer.component\";\nconst _c0 = [\"loginForm\"];\nfunction LoginComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r1.name, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(router, userService, tokenService, roleService) {\n    this.router = router;\n    this.userService = userService;\n    this.tokenService = tokenService;\n    this.roleService = roleService;\n    this.roles = [];\n    this.rememberMe = true;\n    this.phoneNumber = \"0916855344\";\n    this.password = \"string123\";\n  }\n  ngOnInit() {\n    debugger;\n    this.roleService.getRoles().subscribe({\n      next: roles => {\n        debugger;\n        this.roles = roles;\n        this.selectedRole = roles.length > 0 ? roles[0] : undefined;\n      },\n      error: error => {\n        debugger;\n        console.error(\"Error getting roles: \", error);\n      }\n    });\n  }\n  onPhoneNumberChange() {\n    console.log(`Phone typed: ${this.phoneNumber}`);\n  }\n  login() {\n    const message = `phone: ${this.phoneNumber}` + `password: ${this.password}`;\n    debugger;\n    const loginDTO = {\n      phone_number: this.phoneNumber,\n      password: this.password,\n      role_id: this.se\n    };\n    this.userService.login(loginDTO).subscribe({\n      next: response => {\n        debugger;\n        // let token = response.token;\n        //muốn sử dụng token trong các yêu cầu API\n        const {\n          token\n        } = response;\n        this.tokenService.setToken(token);\n        // this.router.navigate([\"/login\"]);\n      },\n\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        alert(error.error.message);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.TokenService), i0.ɵɵdirectiveInject(i4.RoleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n      }\n    },\n    decls: 40,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"login-form\", \"mx-auto\"], [1, \"login-header\"], [1, \"form-group\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\", \"focus\"], [1, \"divider-nospace\"], [1, \"mt-5\"], [1, \"form-group\", \"password-field\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"\\u00EDt nh\\u1EA5t 3 k\\u00FD t\\u1EF1\", \"id\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"password-toogle\", \"fas\", \"fa-eye-slash\"], [1, \"form-check\", \"checkbox-text\"], [2, \"display\", \"flex\"], [\"type\", \"checkbox\", \"id\", \"remember\", 1, \"form-check-input\"], [\"for\", \"remember\", 1, \"form-check-label\", \"text-start\"], [\"href\", \"#\", 1, \"register-link\"], [1, \"form-check\", \"access-right\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\", \"disabled\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"login-button\", 3, \"click\"], [1, \"divider\"], [1, \"text-center\"], [3, \"ngValue\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"\\u0110\\u0103ng nh\\u1EADp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.phoneNumber = $event;\n        })(\"input\", function LoginComponent_Template_input_input_9_listener() {\n          return ctx.onPhoneNumberChange();\n        })(\"focus\", function LoginComponent_Template_input_focus_9_listener() {\n          return ctx.loginForm.form.markAsTouched();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"M\\u1EADt kh\\u1EA9u\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"i\", 12)(17, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 13)(20, \"span\", 14);\n        i0.ɵɵelement(21, \"input\", 15);\n        i0.ɵɵelementStart(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Ghi nh\\u1EDB \\u0111\\u0103ng nh\\u1EADp\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"a\", 17);\n        i0.ɵɵtext(25, \"Qu\\u00EAn m\\u1EADt kh\\u1EA9u\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"select\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_27_listener($event) {\n          return ctx.selectedRole = $event;\n        });\n        i0.ɵɵelementStart(28, \"option\", 19);\n        i0.ɵɵtext(29, \"Quy\\u1EC1n \\u0111\\u0103ng nh\\u1EADp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, LoginComponent_option_30_Template, 2, 2, \"option\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_31_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(32, \" \\u0110\\u0103ng nh\\u1EADp \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"div\", 22);\n        i0.ɵɵelementStart(34, \"p\", 23);\n        i0.ɵɵtext(35, \" B\\u1EA1n ch\\u01B0a \\u0111\\u0103ng k\\u00FD? \");\n        i0.ɵɵelementStart(36, \"span\")(37, \"a\", 17);\n        i0.ɵɵtext(38, \"T\\u1EA1o t\\u00E0i kho\\u1EA3n\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(39, \"app-footer\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.phoneNumber);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedRole);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n      }\n    },\n    dependencies: [i5.NgForOf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, i7.HeaderComponent, i8.FooterComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.container[_ngcontent-%COMP%] {\\n  color: white;\\n  height: 100vh;\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n  background-color: rgb(12, 12, 55);\\n  border-radius: 10px;\\n  padding: 20px;\\n  max-width: 500px;\\n  border: 1px solid rgb(32, 34, 60);\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.login-header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: rgb(105, 244, 181);\\n  margin-bottom: 20px;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  border: none;\\n  color: white;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  color: white;\\n  background-color: transparent;\\n  outline: none;\\n  border-color: transparent;\\n}\\n\\n.divider-nospace[_ngcontent-%COMP%] {\\n  border-top: 1px solid white;\\n}\\n\\n.password-field[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.password-toggle[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  right: 10px;\\n  transform: translateY(-50%);\\n  color: rgb(105, 244, 181);\\n  cursor: pointer;\\n}\\n\\n.checkbox-text[_ngcontent-%COMP%] {\\n  color: rgb(243, 165, 42);\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-top: 10px;\\n}\\n\\n\\n\\n.checkbox-text[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked {\\n  border-color: white;\\n  background-color: rgb(233, 66, 178);\\n}\\n\\n.form-check-input[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n}\\n\\n.register-link[_ngcontent-%COMP%] {\\n  color: rgb(105, 244, 181);\\n  text-decoration: none;\\n}\\n\\n.access-right[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  width: 200px;\\n  color: white;\\n  background-color: rgb(12, 12, 55) !important;\\n  border: 1px solid rgb(225, 64, 180);\\n}\\n\\n.access-right[_ngcontent-%COMP%]:focus {\\n  border: 1px solid rgb(225, 64, 180);\\n}\\n\\n.form-control[_ngcontent-%COMP%]::placeholder {\\n  \\n\\n  color: rgba(243, 165, 42, 0.4);\\n  opacity: 1;\\n  \\n\\n}\\n\\n.form-control[_ngcontent-%COMP%]:-ms-input-placeholder {\\n  \\n\\n  color: rgba(243, 165, 42, 0.4);\\n}\\n\\n.form-control[_ngcontent-%COMP%]::-ms-input-placeholder {\\n  \\n\\n  color: rgba(243, 165, 42, 0.4);\\n}\\n\\n.login-button[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right, rgb(225, 64, 180), rgb(126, 43, 237));\\n  color: white;\\n  border-radius: 30px;\\n  width: 100%;\\n  padding: 10px 0;\\n  margin-top: 20px;\\n  border: none;\\n}\\n\\n.divider[_ngcontent-%COMP%] {\\n  height: 1px;\\n  background-color: rgb(243, 165, 42);\\n  \\n\\n  margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFBaEI7RUFDSSxZQUFBO0VBQ0EsYUFBQTtBQUVKOztBQUFBO0VBQ0ksaUNBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLGlDQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQUdKOztBQURBO0VBQ0ksa0JBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0FBSUo7O0FBRkE7RUFDSSw2QkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBS0o7O0FBSEE7RUFDSSxZQUFBO0VBQ0EsNkJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUFNSjs7QUFIQTtFQUNJLDJCQUFBO0FBTUo7O0FBSEE7RUFDSSxrQkFBQTtBQU1KOztBQUpBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsV0FBQTtFQUNBLDJCQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0FBT0o7O0FBTEE7RUFDSSx3QkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFRSjs7QUFOQSwrQkFBQTtBQUNBO0VBQ0ksbUJBQUE7RUFDQSxtQ0FBQTtBQVNKOztBQU5BO0VBQ0ksaUJBQUE7QUFTSjs7QUFOQTtFQUNJLHlCQUFBO0VBQ0EscUJBQUE7QUFTSjs7QUFQQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSw0Q0FBQTtFQUNBLG1DQUFBO0FBVUo7O0FBUEE7RUFDSSxtQ0FBQTtBQVVKOztBQVBBO0VBQ0kseUNBQUE7RUFDQSw4QkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0FBVUo7O0FBUEE7RUFDSSw0QkFBQTtFQUNBLDhCQUFBO0FBVUo7O0FBUEE7RUFDSSxtQkFBQTtFQUNBLDhCQUFBO0FBVUo7O0FBUEE7RUFDSSwyRUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBVUo7O0FBUkE7RUFDSSxXQUFBO0VBQ0EsbUNBQUE7RUFDQSx5Q0FBQTtFQUNBLFlBQUE7QUFXSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxufVxyXG4ubG9naW4tZm9ybSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIsIDEyLCA1NSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMzIsIDM0LCA2MCk7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLmxvZ2luLWhlYWRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogcmdiKDEwNSwgMjQ0LCAxODEpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsgICAgXHJcbn1cclxuICBcclxuLmRpdmlkZXItbm9zcGFjZSB7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgd2hpdGU7XHJcbn1cclxuXHJcbi5wYXNzd29yZC1maWVsZCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLnBhc3N3b3JkLXRvZ2dsZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgY29sb3I6IHJnYigxMDUsIDI0NCwgMTgxKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4uY2hlY2tib3gtdGV4dCB7XHJcbiAgICBjb2xvcjogcmdiKDI0MywgMTY1LCA0Mik7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLyogTcODwqB1IGNoZWNrYm94IGtoaSDDhMKRw4bCsMOhwrvCo2MgY2jDocK7wo1uICovXHJcbi5jaGVja2JveC10ZXh0IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkIHtcclxuICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMzLCA2NiwgMTc4KTtcclxufVxyXG5cclxuLmZvcm0tY2hlY2staW5wdXQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbi5yZWdpc3Rlci1saW5rIHtcclxuICAgIGNvbG9yOiByZ2IoMTA1LCAyNDQsIDE4MSk7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuLmFjY2Vzcy1yaWdodCB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyLCAxMiwgNTUpICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjI1LCA2NCwgMTgwKTtcclxufVxyXG5cclxuLmFjY2Vzcy1yaWdodDpmb2N1cyB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjI1LCA2NCwgMTgwKTtcclxufVxyXG5cclxuLmZvcm0tY29udHJvbDo6cGxhY2Vob2xkZXIge1xyXG4gICAgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXHJcbiAgICBjb2xvcjogcmdiYSgyNDMsIDE2NSwgNDIsIDAuNCk7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgLyogRmlyZWZveCAqL1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMC0xMSAqL1xyXG4gICAgY29sb3I6IHJnYmEoMjQzLCAxNjUsIDQyLCAwLjQpO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgLyogTWljcm9zb2Z0IEVkZ2UgKi9cclxuICAgIGNvbG9yOiByZ2JhKDI0MywgMTY1LCA0MiwgMC40KTtcclxufVxyXG5cclxuLmxvZ2luLWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYigyMjUsIDY0LCAxODApLCByZ2IoMTI2LCA0MywgMjM3KSk7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcbi5kaXZpZGVyIHtcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMTY1LCA0Mik7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTA1LCAyNDQsIDE4MSkgKi9cclxuICAgIG1hcmdpbjogMjBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r1","ɵɵadvance","ɵɵtextInterpolate1","name","LoginComponent","constructor","router","userService","tokenService","roleService","roles","rememberMe","phoneNumber","password","ngOnInit","getRoles","subscribe","next","selectedRole","length","undefined","error","console","onPhoneNumberChange","log","login","message","loginDTO","phone_number","role_id","se","response","token","setToken","complete","alert","_","ɵɵdirectiveInject","i1","Router","i2","UserService","i3","TokenService","i4","RoleService","_2","selectors","viewQuery","LoginComponent_Query","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_input_9_listener","LoginComponent_Template_input_focus_9_listener","loginForm","form","markAsTouched","LoginComponent_Template_input_ngModelChange_15_listener","LoginComponent_Template_select_ngModelChange_27_listener","ɵɵtemplate","LoginComponent_option_30_Template","LoginComponent_Template_button_click_31_listener"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, ViewChild } from \"@angular/core\";\r\nimport { LoginDTO } from \"../../dtos/user/login.dto\";\r\nimport { UserService } from \"../../service/user.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { LoginResponse } from \"src/app/responses/login.response\";\r\nimport { TokenService } from \"src/app/service/token.service\";\r\nimport { RoleService } from \"src/app/service/role.service\";\r\nimport { Role } from \"src/app/dtos/user/role\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent {\r\n  @ViewChild(\"loginForm\") loginForm!: NgForm;\r\n  phoneNumber: string;\r\n  password: string;\r\n\r\n  roles: Role[] = [];\r\n  rememberMe: boolean = true;\r\n  selectedRole: Role | undefined;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private tokenService: TokenService,\r\n    private roleService: RoleService\r\n  ) {\r\n    this.phoneNumber = \"0916855344\";\r\n    this.password = \"string123\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    debugger;\r\n    this.roleService.getRoles().subscribe({\r\n      next: (roles: Role[]) => {\r\n        debugger;\r\n        this.roles = roles;\r\n        this.selectedRole = roles.length > 0 ? roles[0] : undefined;\r\n      },\r\n      error: (error: any) => {\r\n        debugger;\r\n        console.error(\"Error getting roles: \", error);\r\n      },\r\n    });\r\n  }\r\n\r\n  onPhoneNumberChange() {\r\n    console.log(`Phone typed: ${this.phoneNumber}`);\r\n  }\r\n\r\n  login() {\r\n    const message = `phone: ${this.phoneNumber}` + `password: ${this.password}`;\r\n    debugger;\r\n\r\n    const loginDTO: LoginDTO = {\r\n      phone_number: this.phoneNumber,\r\n      password: this.password,\r\n      role_id: this.se\r\n    };\r\n\r\n    this.userService.login(loginDTO).subscribe({\r\n      next: (response: LoginResponse) => {\r\n        debugger;\r\n        // let token = response.token;\r\n        //muốn sử dụng token trong các yêu cầu API\r\n        const { token } = response;\r\n        this.tokenService.setToken(token);\r\n        // this.router.navigate([\"/login\"]);\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        alert(error.error.message);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"login-form mx-auto\">\r\n        <h2 class=\"login-header\">Đăng nhập</h2>\r\n        <div class=\"form-group\">\r\n          <label for=\"phoneNumber\">Phone</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"phoneNumber\"\r\n            [(ngModel)]=\"phoneNumber\"\r\n            (input)=\"onPhoneNumberChange()\"\r\n            (focus)=\"loginForm.form.markAsTouched()\"\r\n          />\r\n          <div class=\"divider-nospace\"></div>\r\n        </div>\r\n        <div class=\"mt-5\"></div>\r\n        <div class=\"form-group password-field\">\r\n          <label for=\"password\">Mật khẩu</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            [(ngModel)]=\"password\"\r\n            placeholder=\"ít nhất 3 ký tự\"\r\n            class=\"form-control\"\r\n            id=\"password\"\r\n          />\r\n          <i class=\"password-toogle fas fa-eye-slash\"></i>\r\n          <div class=\"divider-nospace\"></div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"form-check checkbox-text\">\r\n            <span style=\"display: flex\">\r\n              <input type=\"checkbox\" class=\"form-check-input\" id=\"remember\" />\r\n              <label class=\"form-check-label text-start\" for=\"remember\"\r\n                >Ghi nhớ đăng nhập</label\r\n              >\r\n            </span>\r\n            <a href=\"#\" class=\"register-link\">Quên mật khẩu</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <select class=\"form-check access-right\" [(ngModel)]=\"selectedRole\">\r\n            <option selected disabled>Quyền đăng nhập</option>\r\n            <option *ngFor=\"let role of roles\" [ngValue]=\"role\"\r\n            > {{role.name}}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" class=\"login-button\" (click)=\"login()\">\r\n          Đăng nhập\r\n        </button>\r\n        <div class=\"divider\"></div>\r\n        <p class=\"text-center\">\r\n          Bạn chưa đăng ký?\r\n          <span> <a href=\"#\" class=\"register-link\">Tạo tài khoản</a></span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}