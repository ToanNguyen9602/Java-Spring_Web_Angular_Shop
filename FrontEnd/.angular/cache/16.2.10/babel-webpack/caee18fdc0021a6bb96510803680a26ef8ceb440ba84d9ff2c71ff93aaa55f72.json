{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { environtment } from \"src/app/environments/environment\";\nexport let HomeComponent = class HomeComponent {\n  constructor(productService, categoryService) {\n    this.productService = productService;\n    this.categoryService = categoryService;\n    this.products = [];\n    this.categories = []; //dữ liệu động từ categoryService\n    this.selectedCategoryId = 0;\n    this.currentPage = 1;\n    this.itemPerPage = 12;\n    this.pages = [];\n    this.totalPages = 0;\n    this.visiblePages = [];\n    this.keyword = \"\";\n  }\n  ngOnInit() {\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemPerPage);\n    this.getCategories(1, 100);\n  }\n  getCategories(page, limit) {\n    this.categoryService.getCategories(page, limit).subscribe({\n      next: categories => {\n        debugger;\n        this.categories = categories;\n      },\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        console.log(\"Error fetching categories\", error);\n      }\n    });\n  }\n  searchProducts() {\n    this.currentPage = 1;\n    this.itemPerPage = 12;\n    debugger;\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemPerPage);\n  }\n  getProducts(keyword, selectedCategoryId, page, limit) {\n    this.productService.getProducts(page, limit).subscribe({\n      next: response => {\n        debugger;\n        response.products.forEach(product => {\n          //show image\n          product.url = `${environtment.apiBaseUrl}/products/images/${product.thumbnail}`;\n        });\n        this.products = response.products;\n        this.totalPages = response.totalPages;\n        this.visiblePages = this.generateVisiblePageArray(this.currentPage, this.totalPages);\n      },\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        console.error(\"Error getting products: \", error);\n      }\n    });\n  }\n  //khi bam chuyen phan trang product khac\n  onPageChange(page) {\n    debugger;\n    this.currentPage = page;\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemPerPage);\n  }\n  generateVisiblePageArray(currentPage, totalPages) {\n    const maxVisiblePages = 5;\n    const halfVisiblePage = Math.floor(maxVisiblePages / 2);\n    let startPage = Math.max(currentPage - halfVisiblePage, 1);\n    let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n    }\n    return new Array(endPage - startPage + 1).fill(0).map((_, index) => startPage + index);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"]\n})], HomeComponent);","map":{"version":3,"names":["Component","environtment","HomeComponent","constructor","productService","categoryService","products","categories","selectedCategoryId","currentPage","itemPerPage","pages","totalPages","visiblePages","keyword","ngOnInit","getProducts","getCategories","page","limit","subscribe","next","complete","error","console","log","searchProducts","response","forEach","product","url","apiBaseUrl","thumbnail","generateVisiblePageArray","onPageChange","maxVisiblePages","halfVisiblePage","Math","floor","startPage","max","endPage","min","Array","fill","map","_","index","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Category } from \"src/app/dtos/category/category\";\r\nimport { Product } from \"src/app/dtos/product/product\";\r\nimport { environtment } from \"src/app/environments/environment\";\r\nimport { CategoryService } from \"src/app/service/category.service\";\r\nimport { ProductService } from \"src/app/service/product.service\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.scss\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  products: Product[] = [];\r\n  categories: Category[] = []; //dữ liệu động từ categoryService\r\n  selectedCategoryId: number = 0;\r\n  currentPage: number = 1;\r\n  itemPerPage: number = 12;\r\n  pages: number[] = [];\r\n  totalPages: number = 0;\r\n  visiblePages: number[] = [];\r\n  keyword: string = \"\";\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private categoryService: CategoryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts(\r\n      this.keyword,\r\n      this.selectedCategoryId,\r\n      this.currentPage,\r\n      this.itemPerPage\r\n    );\r\n    this.getCategories(1, 100);\r\n  }\r\n\r\n  getCategories(page: number, limit: number) {\r\n    this.categoryService.getCategories(page, limit).subscribe({\r\n      next: (categories: Category[]) => {\r\n        debugger;\r\n        this.categories = categories;\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        console.log(\"Error fetching categories\", error);\r\n      },\r\n    });\r\n  }\r\n\r\n  searchProducts() {\r\n    this.currentPage = 1;\r\n    this.itemPerPage = 12;\r\n    debugger;\r\n    this.getProducts(\r\n      this.keyword,\r\n      this.selectedCategoryId,\r\n      this.currentPage,\r\n      this.itemPerPage\r\n    );\r\n  }\r\n\r\n  getProducts(\r\n    keyword: string,\r\n    selectedCategoryId: number,\r\n    page: number,\r\n    limit: number\r\n  ) {\r\n    this.productService.getProducts(page, limit).subscribe({\r\n      next: (response: any) => {\r\n        debugger;\r\n        response.products.forEach((product: Product) => {\r\n          //show image\r\n          product.url = `${environtment.apiBaseUrl}/products/images/${product.thumbnail}`;\r\n        });\r\n        this.products = response.products;\r\n        this.totalPages = response.totalPages;\r\n        this.visiblePages = this.generateVisiblePageArray(\r\n          this.currentPage,\r\n          this.totalPages\r\n        );\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        console.error(\"Error getting products: \", error);\r\n      },\r\n    });\r\n  }\r\n  //khi bam chuyen phan trang product khac\r\n  onPageChange(page: number) {\r\n    debugger;\r\n    this.currentPage = page;\r\n    this.getProducts(\r\n      this.keyword,\r\n      this.selectedCategoryId,\r\n      this.currentPage,\r\n      this.itemPerPage\r\n    );\r\n  }\r\n\r\n  generateVisiblePageArray(currentPage: number, totalPages: number): number[] {\r\n    const maxVisiblePages = 5;\r\n    const halfVisiblePage = Math.floor(maxVisiblePages / 2);\r\n\r\n    let startPage = Math.max(currentPage - halfVisiblePage, 1);\r\n    let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\r\n\r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(endPage - maxVisiblePages + 1, 1);\r\n    }\r\n\r\n    return new Array(endPage - startPage + 1)\r\n      .fill(0)\r\n      .map((_, index) => startPage + index);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}