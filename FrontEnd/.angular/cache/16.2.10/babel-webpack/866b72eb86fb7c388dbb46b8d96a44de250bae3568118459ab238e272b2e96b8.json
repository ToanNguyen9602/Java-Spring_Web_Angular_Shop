{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/product.service\";\nexport class CartService {\n  constructor(productService) {\n    this.productService = productService;\n    this.cart = new Map();\n    //lấy dữ liệu giỏ hàng từ localStorage khi khởi tạo service\n    const storeCart = localStorage.getItem(\"cart\");\n    if (storeCart) {\n      this.cart = new Map(JSON.parse(storeCart));\n    }\n  }\n  addToCart(productId, quantity = 1) {\n    debugger;\n    if (this.cart.has(productId)) {\n      //nếu sản phẩm đã có trong giỏ hàng, tăng số lượng quantity lên\n      this.cart.set(productId, this.cart.get(productId) + quantity);\n    } else {\n      //Nếu sản phẩm chưa có trao giỏ hàng thì thêm sản phẩm vào số luongjw với quantity\n      this.cart.set(productId, quantity);\n    }\n    //Sau khi thay đổi giỏ hàng, lưu trừ nó vào localStorage\n    this.saveCartToLocalStorage();\n  }\n  getCart() {\n    return this.cart;\n  }\n  saveCartToLocalStorage() {\n    debugger;\n    localStorage.setItem(\"cart\", JSON.stringify(Array.from(this.cart.entries())));\n  }\n  //xoá dữ liệu cart và cập nhật Local Storage\n  clearCart() {\n    this.cart.clear(); //xoá toàn bộ dữ liệu trong giỏ hàng\n    this.saveCartToLocalStorage(); // lưu giỏ hàng vào localStorage trống\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.ProductService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["CartService","constructor","productService","cart","Map","storeCart","localStorage","getItem","JSON","parse","addToCart","productId","quantity","has","set","get","saveCartToLocalStorage","getCart","setItem","stringify","Array","from","entries","clearCart","clear","_","i0","ɵɵinject","i1","ProductService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\service\\cart.service.ts"],"sourcesContent":["import { from } from \"rxjs\";\r\nimport { ProductService } from \"src/app/service/product.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LocalStorageService } from \"ngx-webstorage\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CartService {\r\n  private cart: Map<number, number> = new Map<number,number>\r\n  localStorage?: LocalStorageService;\r\n  constructor(private productService: ProductService) {\r\n    //lấy dữ liệu giỏ hàng từ localStorage khi khởi tạo service\r\n    const storeCart = localStorage.getItem(\"cart\");\r\n    if (storeCart) {\r\n      this.cart = new Map(JSON.parse(storeCart));\r\n    }\r\n  }\r\n\r\n  addToCart(productId: number, quantity: number = 1): void {\r\n    debugger;\r\n    if (this.cart.has(productId)) {\r\n      //nếu sản phẩm đã có trong giỏ hàng, tăng số lượng quantity lên\r\n      this.cart.set(productId, this.cart.get(productId)! + quantity);\r\n    } else {\r\n      //Nếu sản phẩm chưa có trao giỏ hàng thì thêm sản phẩm vào số luongjw với quantity\r\n      this.cart.set(productId, quantity);\r\n    }\r\n    //Sau khi thay đổi giỏ hàng, lưu trừ nó vào localStorage\r\n    this.saveCartToLocalStorage();\r\n  }\r\n\r\n  getCart(): Map<number, number> {\r\n    return this.cart;\r\n  }\r\n  private saveCartToLocalStorage(): void {\r\n    debugger;\r\n    localStorage.setItem(\r\n      \"cart\",\r\n      JSON.stringify(Array.from(this.cart.entries()))\r\n    );\r\n  }\r\n  //xoá dữ liệu cart và cập nhật Local Storage\r\n  clearCart(): void {\r\n    this.cart.clear(); //xoá toàn bộ dữ liệu trong giỏ hàng\r\n    this.saveCartToLocalStorage(); // lưu giỏ hàng vào localStorage trống\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAF1B,KAAAC,IAAI,GAAwB,IAAIC,GAAkB,CAAlB,CAAkB;IAGxD;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI,CAACF,IAAI,GAAG,IAAIC,GAAG,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;;EAE9C;EAEAK,SAASA,CAACC,SAAiB,EAAEC,QAAA,GAAmB,CAAC;IAC/C;IACA,IAAI,IAAI,CAACT,IAAI,CAACU,GAAG,CAACF,SAAS,CAAC,EAAE;MAC5B;MACA,IAAI,CAACR,IAAI,CAACW,GAAG,CAACH,SAAS,EAAE,IAAI,CAACR,IAAI,CAACY,GAAG,CAACJ,SAAS,CAAE,GAAGC,QAAQ,CAAC;KAC/D,MAAM;MACL;MACA,IAAI,CAACT,IAAI,CAACW,GAAG,CAACH,SAAS,EAAEC,QAAQ,CAAC;;IAEpC;IACA,IAAI,CAACI,sBAAsB,EAAE;EAC/B;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACd,IAAI;EAClB;EACQa,sBAAsBA,CAAA;IAC5B;IACAV,YAAY,CAACY,OAAO,CAClB,MAAM,EACNV,IAAI,CAACW,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAClB,IAAI,CAACmB,OAAO,EAAE,CAAC,CAAC,CAChD;EACH;EACA;EACAC,SAASA,CAAA;IACP,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE,CAAC,CAAC;IACnB,IAAI,CAACR,sBAAsB,EAAE,CAAC,CAAC;EACjC;EAAC,QAAAS,CAAA,G;qBAtCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}