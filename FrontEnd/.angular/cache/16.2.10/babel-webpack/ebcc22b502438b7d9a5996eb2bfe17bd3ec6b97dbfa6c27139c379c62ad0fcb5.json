{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiRegister = `${environment.apiBaseUrl}/users/register`;\n    this.apiLogin = `${environment.apiBaseUrl}/users/login`;\n    this.apiUserDetail = `${environment.apiBaseUrl}/users/details`;\n    this.apiConfig = {\n      headers: this.createHeaders()\n    };\n  }\n  createHeaders() {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      \"Accept-Language\": \"vi\"\n    });\n  }\n  register(registerDTO) {\n    return this.http.post(this.apiRegister, registerDTO, this.apiConfig);\n  }\n  login(loginDTO) {\n    return this.http.post(this.apiLogin, loginDTO, this.apiConfig);\n  }\n  getUserDetail(token) {\n    //post(url,body)\n    return this.http.post(this.apiUserDetail, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      })\n    });\n  }\n  saveUserToLocalStorage(userResponse) {\n    debugger;\n    try {\n      if (userResponse == null || !userResponse) {\n        return;\n      }\n      //convert userResponse object to a JSON string\n      const userResponseJSON = JSON.stringify(userResponse);\n      //Save thhe JSON string to local storage wutg a key\n      localStorage.setItem(\"user\", userResponseJSON);\n      console.log(\"User response saved to local storage.\");\n    } catch (error) {\n      console.log(\"Error saving user response to local storage\");\n    }\n  }\n  getUserResponseFromLocalStorage() {\n    try {\n      const userResponseJSON = localStorage.getItem(\"user\");\n    } finally {}\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","UserService","constructor","http","apiRegister","apiBaseUrl","apiLogin","apiUserDetail","apiConfig","headers","createHeaders","register","registerDTO","post","login","loginDTO","getUserDetail","token","Authorization","saveUserToLocalStorage","userResponse","userResponseJSON","JSON","stringify","localStorage","setItem","console","log","error","getUserResponseFromLocalStorage","getItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ResgisterDTO } from \"../dtos/user/register.dto\";\r\nimport { LoginDTO } from \"../dtos/user/login.dto\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { UserResponse } from \"../responses/user/user.response\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  private apiRegister = `${environment.apiBaseUrl}/users/register`;\r\n  private apiLogin = `${environment.apiBaseUrl}/users/login`;\r\n  private apiUserDetail = `${environment.apiBaseUrl}/users/details`;\r\n  private apiConfig = {\r\n    headers: this.createHeaders(),\r\n  };\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private createHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept-Language\": \"vi\",\r\n    });\r\n  }\r\n\r\n  register(registerDTO: ResgisterDTO): Observable<any> {\r\n    return this.http.post(this.apiRegister, registerDTO, this.apiConfig);\r\n  }\r\n\r\n  login(loginDTO: LoginDTO): Observable<any> {\r\n    return this.http.post(this.apiLogin, loginDTO, this.apiConfig);\r\n  }\r\n\r\n  getUserDetail(token: string) {\r\n    //post(url,body)\r\n    return this.http.post(this.apiUserDetail, {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      }),\r\n    });\r\n  }\r\n\r\n  saveUserToLocalStorage(userResponse?: UserResponse) {\r\n    debugger\r\n    try {\r\n      if (userResponse == null || !userResponse) {\r\n        return;\r\n      }\r\n      //convert userResponse object to a JSON string\r\n      const userResponseJSON = JSON.stringify(userResponse);\r\n      //Save thhe JSON string to local storage wutg a key\r\n      localStorage.setItem(\"user\", userResponseJSON);\r\n      console.log(\"User response saved to local storage.\");\r\n    } catch (error) {\r\n      console.log(\"Error saving user response to local storage\");\r\n    }\r\n  }\r\n\r\n  getUserResponseFromLocalStorage() {\r\n    try {\r\n      const userResponseJSON = localStorage.getItem(\"user\");\r\n      \r\n    } \r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAI9D,SAASC,WAAW,QAAQ,6BAA6B;;;AAMzD,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,WAAW,GAAG,GAAGJ,WAAW,CAACK,UAAU,iBAAiB;IACxD,KAAAC,QAAQ,GAAG,GAAGN,WAAW,CAACK,UAAU,cAAc;IAClD,KAAAE,aAAa,GAAG,GAAGP,WAAW,CAACK,UAAU,gBAAgB;IACzD,KAAAG,SAAS,GAAG;MAClBC,OAAO,EAAE,IAAI,CAACC,aAAa;KAC5B;EACsC;EAE/BA,aAAaA,CAAA;IACnB,OAAO,IAAIX,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,iBAAiB,EAAE;KACpB,CAAC;EACJ;EAEAY,QAAQA,CAACC,WAAyB;IAChC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,WAAW,EAAEQ,WAAW,EAAE,IAAI,CAACJ,SAAS,CAAC;EACtE;EAEAM,KAAKA,CAACC,QAAkB;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACU,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAES,QAAQ,EAAE,IAAI,CAACP,SAAS,CAAC;EAChE;EAEAQ,aAAaA,CAACC,KAAa;IACzB;IACA,OAAO,IAAI,CAACd,IAAI,CAACU,IAAI,CAAC,IAAI,CAACN,aAAa,EAAE;MACxCE,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClCmB,aAAa,EAAE,UAAUD,KAAK;OAC/B;KACF,CAAC;EACJ;EAEAE,sBAAsBA,CAACC,YAA2B;IAChD;IACA,IAAI;MACF,IAAIA,YAAY,IAAI,IAAI,IAAI,CAACA,YAAY,EAAE;QACzC;;MAEF;MACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,SAAS,CAACH,YAAY,CAAC;MACrD;MACAI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,gBAAgB,CAAC;MAC9CK,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;KACrD,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;;EAE9D;EAEAE,+BAA+BA,CAAA;IAC7B,IAAI;MACF,MAAMR,gBAAgB,GAAGG,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;KAEtD,SACH,C;EAAA;EAAC,QAAAC,CAAA,G;qBAvDU9B,WAAW,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnC,WAAW;IAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}