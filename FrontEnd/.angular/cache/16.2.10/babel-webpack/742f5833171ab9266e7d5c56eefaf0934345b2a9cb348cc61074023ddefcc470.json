{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiGetCategories = `${environtment.apiBaseUrl}/categories`;\n    this.apiConfig = {\n      headers: this.createHeader()\n    };\n  }\n  createHeader() {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      \"Accept-Language\": \"vi\"\n    });\n  }\n  getCategories(page, limit) {\n    const params = new HttpParams().set(\"page\", page.toString()).set(\"limit\", limit.toString());\n    return this.http.get(this.apiGetCategories, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","CategoryService","constructor","http","apiGetCategories","environtment","apiBaseUrl","apiConfig","headers","createHeader","getCategories","page","limit","params","set","toString","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\service\\category.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Category } from \"../models/category\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CategoryService {\r\n  private apiGetCategories = `${environtment.apiBaseUrl}/categories`;\r\n  private apiConfig = {\r\n    headers: this.createHeader(),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n  private createHeader(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept-Language\": \"vi\",\r\n    });\r\n  }\r\n\r\n  getCategories(page: number, limit: number): Observable<Category[]> {\r\n    const params = new HttpParams()\r\n      .set(\"page\", page.toString())\r\n      .set(\"limit\", limit.toString());\r\n    return this.http.get<Category[]>(this.apiGetCategories, { params });\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;;;AAQ1E,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,gBAAgB,GAAG,GAAGC,YAAY,CAACC,UAAU,aAAa;IAC1D,KAAAC,SAAS,GAAG;MAClBC,OAAO,EAAE,IAAI,CAACC,YAAY;KAC3B;EAEsC;EAC/BA,YAAYA,CAAA;IAClB,OAAO,IAAIV,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,iBAAiB,EAAE;KACpB,CAAC;EACJ;EAEAW,aAAaA,CAACC,IAAY,EAAEC,KAAa;IACvC,MAAMC,MAAM,GAAG,IAAIb,UAAU,EAAE,CAC5Bc,GAAG,CAAC,MAAM,EAAEH,IAAI,CAACI,QAAQ,EAAE,CAAC,CAC5BD,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACG,QAAQ,EAAE,CAAC;IACjC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAa,IAAI,CAACZ,gBAAgB,EAAE;MAAES;IAAM,CAAE,CAAC;EACrE;EAAC,QAAAI,CAAA,G;qBAnBUhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}