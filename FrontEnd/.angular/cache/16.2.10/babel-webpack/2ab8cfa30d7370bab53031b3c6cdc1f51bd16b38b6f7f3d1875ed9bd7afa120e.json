{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = \"http://localhost:8090/api/v1/users/register\";\n  }\n  register(registerDTO) {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    });\n    return this.http.post(this.apiURL, registerDTO, {\n      headers\n    });\n  }\n  login(loginDTO) {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    });\n    return this.http.post(this.apiURL, loginDTO, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","constructor","http","apiURL","register","registerDTO","headers","post","login","loginDTO","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ResgisterDTO } from \"../dtos/user/register.dto\";\r\nimport { LoginDTO } from \"../dtos/user/login.dto\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  private apiURL = \"http://localhost:8090/api/v1/users/register\";\r\n  constructor(private http: HttpClient) {}\r\n  register(registerDTO: ResgisterDTO): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    return this.http.post(this.apiURL,registerDTO,{headers})\r\n  }\r\n  login(loginDTO: LoginDTO): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    return this.http.post(this.apiURL,loginDTO,{headers})\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,6CAA6C;EACvB;EACvCC,QAAQA,CAACC,WAAyB;IAChC,MAAMC,OAAO,GAAG,IAAIP,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,OAAO,IAAI,CAACG,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,MAAM,EAACE,WAAW,EAAC;MAACC;IAAO,CAAC,CAAC;EAC1D;EACAE,KAAKA,CAACC,QAAkB;IACtB,MAAMH,OAAO,GAAG,IAAIP,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,OAAO,IAAI,CAACG,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,MAAM,EAACM,QAAQ,EAAC;MAACH;IAAO,CAAC,CAAC;EACvD;EAAC,QAAAI,CAAA,G;qBAdUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}