{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { environtment } from \"src/app/environments/environment\";\nexport let OrderConfirmComponent = class OrderConfirmComponent {\n  constructor(cartService, productService) {\n    this.cartService = cartService;\n    this.productService = productService;\n    this.cartItems = [];\n  }\n  ngOnInit() {\n    //lấy danh sách sản phẩm từ trong giỏ hàng\n    debugger;\n    const cart = this.cartService.getCart();\n    //chuyển  danh sách Id từ Map sang giỏ hàng\n    const productIds = Array.from(cart.keys());\n    //gọi service lấy thông tin sản phẩm dựa trên danh sách ID\n    debugger;\n    this.productService.getProductsByIds(productIds).subscribe({\n      next: products => {\n        debugger;\n        //lấy thông tin sp và so luong từ danh sách sp và giỏ hàng\n        this.cartItems = productIds.map(productId => {\n          debugger;\n          const product = products.find(p => p.id === productId);\n          if (product) {\n            product.thumbnail = `${environtment.apiBaseUrl}/products/images/${product.thumbnail}`;\n          }\n          return {\n            product: product,\n            quantity: cart.get(productId)\n          };\n        });\n        console.log(\"oke done\");\n      },\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        debugger;\n        console.error(\"Error fetching detail: \", error);\n      }\n    });\n  }\n};\nOrderConfirmComponent = __decorate([Component({\n  selector: \"app-order-confirm\",\n  templateUrl: \"./order-confirm.component.html\",\n  styleUrls: [\"./order-confirm.component.scss\"]\n})], OrderConfirmComponent);","map":{"version":3,"names":["Component","environtment","OrderConfirmComponent","constructor","cartService","productService","cartItems","ngOnInit","cart","getCart","productIds","Array","from","keys","getProductsByIds","subscribe","next","products","map","productId","product","find","p","id","thumbnail","apiBaseUrl","quantity","get","console","log","complete","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\components\\order-confirm\\order-confirm.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { environtment } from \"src/app/environments/environment\";\r\nimport { Product } from \"src/app/models/product\";\r\nimport { CartService } from \"src/app/service/cart.service\";\r\nimport { ProductService } from \"src/app/service/product.service\";\r\n\r\n@Component({\r\n  selector: \"app-order-confirm\",\r\n  templateUrl: \"./order-confirm.component.html\",\r\n  styleUrls: [\"./order-confirm.component.scss\"],\r\n})\r\nexport class OrderConfirmComponent implements OnInit {\r\n  cartItems: { product: Product; quantity: number }[] = [];\r\n\r\n  constructor(\r\n    private cartService: CartService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //lấy danh sách sản phẩm từ trong giỏ hàng\r\n    debugger;\r\n    const cart = this.cartService.getCart();\r\n    //chuyển  danh sách Id từ Map sang giỏ hàng\r\n    const productIds = Array.from(cart.keys());\r\n    //gọi service lấy thông tin sản phẩm dựa trên danh sách ID\r\n    debugger;\r\n    this.productService.getProductsByIds(productIds).subscribe({\r\n      next: (products) => {\r\n        debugger;\r\n        //lấy thông tin sp và so luong từ danh sách sp và giỏ hàng\r\n        this.cartItems = productIds.map((productId) => {\r\n          debugger;\r\n          const product = products.find((p) => p.id === productId);\r\n          if (product) {\r\n            product.thumbnail = `${environtment.apiBaseUrl}/products/images/${product.thumbnail}`;\r\n          }\r\n          return {\r\n            product: product!,\r\n            quantity: cart.get(productId)!,\r\n          };\r\n        });\r\n        console.log(\"oke done\");\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        debugger;\r\n        console.error(\"Error fetching detail: \", error);\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,kCAAkC;AAUxD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAGhCC,YACUC,WAAwB,EACxBC,cAA8B;IAD9B,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,cAAc,GAAdA,cAAc;IAJxB,KAAAC,SAAS,GAA6C,EAAE;EAKrD;EAEHC,QAAQA,CAAA;IACN;IACA;IACA,MAAMC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE;IACvC;IACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAACK,IAAI,EAAE,CAAC;IAC1C;IACA;IACA,IAAI,CAACR,cAAc,CAACS,gBAAgB,CAACJ,UAAU,CAAC,CAACK,SAAS,CAAC;MACzDC,IAAI,EAAGC,QAAQ,IAAI;QACjB;QACA;QACA,IAAI,CAACX,SAAS,GAAGI,UAAU,CAACQ,GAAG,CAAEC,SAAS,IAAI;UAC5C;UACA,MAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,SAAS,CAAC;UACxD,IAAIC,OAAO,EAAE;YACXA,OAAO,CAACI,SAAS,GAAG,GAAGvB,YAAY,CAACwB,UAAU,oBAAoBL,OAAO,CAACI,SAAS,EAAE;;UAEvF,OAAO;YACLJ,OAAO,EAAEA,OAAQ;YACjBM,QAAQ,EAAElB,IAAI,CAACmB,GAAG,CAACR,SAAS;WAC7B;QACH,CAAC,CAAC;QACFS,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACb;MACF,CAAC;MACDC,KAAK,EAAGA,KAAU,IAAI;QACpB;QACAH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;KACD,CAAC;EACJ;CACD;AA1CY7B,qBAAqB,GAAA8B,UAAA,EALjChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWjC,qBAAqB,CA0CjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}