{"ast":null,"code":"import { environtment } from \"../environments/environment\";\nimport { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiGetProducts = `${environtment.apiBaseUrl}/products`;\n    this.apiConfig = {\n      headers: this.createHeader()\n    };\n  }\n  createHeader() {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      \"Accept-Language\": \"vi\"\n    });\n  }\n  getProducts(keyword, se, page, limit) {\n    const params = new HttpParams().set('page', page.toString()).set('limit', limit.toString());\n    return this.http.get(this.apiGetProducts, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["environtment","HttpHeaders","HttpParams","ProductService","constructor","http","apiGetProducts","apiBaseUrl","apiConfig","headers","createHeader","getProducts","keyword","se","page","limit","params","set","toString","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\ShopApp\\Java-Spring_Web_Angular_Shop\\FrontEnd\\src\\app\\service\\product.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { environtment } from \"../environments/environment\";\r\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Product } from \"../dtos/product/product\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\n\r\nexport class ProductService {\r\n    private apiGetProducts = `${environtment.apiBaseUrl}/products`;\r\n    private apiConfig = {\r\n        headers: this.createHeader(),\r\n    }\r\n    \r\n    constructor(private http: HttpClient) { }\r\n    private createHeader() : HttpHeaders {\r\n        return new HttpHeaders({\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept-Language\": \"vi\",\r\n        });\r\n    }\r\n\r\n    getProducts(keyword:string, se page: number, limit: number): Observable<Product[]> {\r\n        const params = new HttpParams()\r\n        .set('page', page.toString())\r\n        .set('limit', limit.toString());\r\n        return this.http.get<Product[]>(this.apiGetProducts,{params});\r\n    }\r\n}\r\n\r\n\r\n\r\n  "],"mappings":"AACA,SAASA,YAAY,QAAQ,6BAA6B;AAC1D,SAAqBC,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;;;AAS1E,OAAM,MAAOC,cAAc;EAMvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,cAAc,GAAG,GAAGN,YAAY,CAACO,UAAU,WAAW;IACtD,KAAAC,SAAS,GAAG;MAChBC,OAAO,EAAE,IAAI,CAACC,YAAY;KAC7B;EAEuC;EAChCA,YAAYA,CAAA;IAChB,OAAO,IAAIT,WAAW,CAAC;MACnB,cAAc,EAAE,kBAAkB;MAClC,iBAAiB,EAAE;KACtB,CAAC;EACN;EAEAU,WAAWA,CAACC,OAAc,EAAEC,EAAE,EAACC,IAAY,EAAEC,KAAa;IACtD,MAAMC,MAAM,GAAG,IAAId,UAAU,EAAE,CAC9Be,GAAG,CAAC,MAAM,EAAEH,IAAI,CAACI,QAAQ,EAAE,CAAC,CAC5BD,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACG,QAAQ,EAAE,CAAC;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAY,IAAI,CAACb,cAAc,EAAC;MAACU;IAAM,CAAC,CAAC;EACjE;EAAC,QAAAI,CAAA,G;qBAnBQjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}